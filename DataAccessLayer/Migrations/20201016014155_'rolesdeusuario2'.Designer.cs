// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20201016014155_'rolesdeusuario2'")]
    partial class rolesdeusuario2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccessLayer.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdFacultad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("DataAccessLayer.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantCreditos")
                        .HasColumnType("int");

                    b.Property<int?>("CarreraId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("DataAccessLayer.Facultad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Facultades");
                });

            modelBuilder.Entity("DataAccessLayer.Roles", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DataAccessLayer.Usuario", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdFacultad")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cedula", "IdFacultad");

                    b.HasIndex("FacultadId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DataAccessLayer.UsuarioRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RolIdRol")
                        .HasColumnType("int");

                    b.Property<string>("usuarioCedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("usuarioIdFacultad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolIdRol");

                    b.HasIndex("usuarioCedula", "usuarioIdFacultad");

                    b.ToTable("UsuarioRol");
                });

            modelBuilder.Entity("DataAccessLayer.Curso", b =>
                {
                    b.HasOne("DataAccessLayer.Carrera", null)
                        .WithMany("Cursos")
                        .HasForeignKey("CarreraId");
                });

            modelBuilder.Entity("DataAccessLayer.Usuario", b =>
                {
                    b.HasOne("DataAccessLayer.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadId");
                });

            modelBuilder.Entity("DataAccessLayer.UsuarioRol", b =>
                {
                    b.HasOne("DataAccessLayer.Roles", "Rol")
                        .WithMany()
                        .HasForeignKey("RolIdRol");

                    b.HasOne("DataAccessLayer.Usuario", "usuario")
                        .WithMany("Roles")
                        .HasForeignKey("usuarioCedula", "usuarioIdFacultad");
                });
#pragma warning restore 612, 618
        }
    }
}
